<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Loading</title>
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(to right, #4caf50, #00bcd4);
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      overflow: hidden;
      color: #333;
    }

    .loader {
      border: 6px solid #f3f3f3;
      border-radius: 50%;
      border-top: 6px solid #4caf50;
      width: 60px;
      height: 60px;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }

    h1 {
      margin-top: 20px;
      color: white;
    }
  </style>
</head>

<body>
  <div class="loader"></div>
  <h1>Loading, please wait...</h1>

  <script>
    // Ensure fetchPrediction is only called once
    let isPredictionFetched = false;
  
    async function fetchPrediction() {
      if (!isPredictionFetched) {
        isPredictionFetched = true; // Set the flag to prevent further requests
        try {
          const response = await fetch('/predict'); // Call the /predict route
          
          if (response.ok) {
            const data = await response.json(); // Get the JSON response containing points, group, and confidence
            
            const { points, group, confidence } = data; // Destructure the required fields
  
            // Redirect to the result page with query parameters
            window.location.href = `/result?points=${points}&group=${group}&confidence=${confidence}`;
          } else {
            console.error('Error during prediction');
          }
        } catch (error) {
          console.error('Error fetching prediction:', error);
        }
      }
    }
  
    fetchPrediction(); // Trigger when loader page loads
  </script>
  
</body>

</html>